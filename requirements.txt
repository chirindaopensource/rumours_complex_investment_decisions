# =============================================================================#
# Requirements File for Qualitative Reasoning Engine
# 
# Production-grade dependency specifications for the qualitative reasoning
# framework implementing Bočková et al. (2025) methodology.
#
# This file ensures reproducible builds while allowing for security patches
# and bug fixes through carefully constrained version ranges.
#
# Installation: pip install -r requirements.txt
# Python Version Requirement: >=3.8
# =============================================================================#

# Core Scientific Computing Stack
# --------------------------------
# NumPy: Fundamental package for scientific computing with Python
# - Provides n-dimensional array objects, mathematical functions
# - Essential for correlation matrix operations and numerical computations
numpy>=1.21.0,<2.0.0

# Pandas: Powerful data structures and data analysis tools
# - DataFrame operations for correlation data processing
# - CSV/Excel I/O for input data handling
# - Statistical operations and data validation
pandas>=1.3.0,<3.0.0

# SciPy: Scientific computing library
# - Statistical functions (scipy.stats) for data analysis
# - Optimization routines if needed for constraint validation
# - Linear algebra operations complementing NumPy
scipy>=1.7.0,<2.0.0

# Constraint Programming Framework
# --------------------------------
# Python-Constraint: Constraint Satisfaction Problem solver
# - Core CSP implementation for qualitative reasoning
# - Backtracking search algorithms
# - Custom constraint class support
# Note: This is the critical dependency for the CSP formulation
python-constraint>=1.4.0,<2.0.0

# Graph Theory and Network Analysis
# ---------------------------------
# NetworkX: Python library for creation, manipulation, and study of graphs
# - Directed graph construction (Algorithm 3)
# - Graph traversal and analysis algorithms
# - Network visualization capabilities
networkx>=2.6.0,<4.0.0

# Data Visualization
# ------------------
# Matplotlib: Comprehensive plotting library
# - Figure generation for validation against paper results
# - Network visualization support
# - Statistical plot generation
matplotlib>=3.4.0,<4.0.0

# Development and Quality Assurance Dependencies
# ----------------------------------------------
# These are optional but recommended for development environments

# Code formatting and style
# black>=22.0.0,<24.0.0
# flake8>=4.0.0,<7.0.0
# isort>=5.10.0,<6.0.0

# Type checking
# mypy>=0.900,<2.0.0

# Testing framework
# pytest>=7.0.0,<8.0.0
# pytest-cov>=3.0.0,<5.0.0

# Documentation generation
# sphinx>=4.0.0,<8.0.0
# sphinx-rtd-theme>=1.0.0,<3.0.0

# Performance profiling and optimization
# memory-profiler>=0.60.0,<1.0.0
# line-profiler>=4.0.0,<5.0.0

# =============================================================================#
# Version Justification and Compatibility Notes
# =============================================================================#
#
# NumPy 1.21.0+:
# - Introduces improved type annotations and array API standards
# - Maintains compatibility with Pandas and SciPy stack
# - Provides stable matrix operations required for correlation processing
#
# Pandas 1.3.0+:
# - Stable DataFrame API with proper type hints
# - Reliable CSV/Excel I/O operations
# - Compatible with NumPy 1.21+ and SciPy stack
#
# SciPy 1.7.0+:
# - Statistical functions in scipy.stats are stable and well-documented
# - Compatible with NumPy 1.21+ dependency
# - Provides robust numerical algorithms
#
# Python-Constraint 1.4.0+:
# - Mature CSP solver with stable API
# - Supports custom constraint classes required for qualitative algebra
# - Minimal dependencies, avoiding conflicts
#
# NetworkX 2.6.0+:
# - Stable graph construction and analysis API
# - Efficient algorithms for large graph processing
# - Good integration with Matplotlib for visualization
#
# Matplotlib 3.4.0+:
# - Stable plotting API with good NumPy integration
# - Required for validation figure generation
# - Compatible with NetworkX for graph visualization
#
# =============================================================================#
# Installation and Environment Setup
# =============================================================================#
#
# Recommended installation process:
#
# 1. Create virtual environment:
#    python3 -m venv qualitative_reasoning_env
#    source qualitative_reasoning_env/bin/activate  # On Windows: qualitative_reasoning_env\Scripts\activate
#
# 2. Upgrade pip:
#    python -m pip install --upgrade pip
#
# 3. Install dependencies:
#    pip install -r requirements.txt
#
# 4. Verify installation:
#    python -c "import numpy, pandas, scipy, constraint, networkx, matplotlib; print('All dependencies loaded successfully')"
#
# =============================================================================#